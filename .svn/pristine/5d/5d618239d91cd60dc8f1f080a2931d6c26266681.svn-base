//
//  PopupView.swift
//  Brainshots
//
//  Created by Amritpal Singh on 09/02/17.
//  Copyright Â© 2017 Anuradha Sharma. All rights reserved.
//

import UIKit

class PopupView: UIView {

    let label = UILabel()
    
    override init(frame: CGRect) {
        
        super.init(frame: frame)
        label.frame = CGRect(x: 10, y: 10, width: frame.size.width-20, height: frame.size.height-20)
        didLoad()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    convenience init() {
        self.init(frame: CGRect.zero)
    }
    
    /*Initialization Method*/
    func didLoad() {
        
        self.addSubview(label)
        
        self.layer.borderWidth = 4
        self.layer.borderColor = UIColor.white.cgColor
        self.backgroundColor = kBaseColor
        
        self.layer.shadowColor = UIColor.black.cgColor
        self.layer.shadowOpacity = 1
        self.layer.shadowRadius = 5
        self.layer.shadowOffset = CGSize(width: 0, height: 0)
        
        label.font = UIFont.init(name: "FatFrank-Regular", size: 25);
        label.textAlignment = .center
        label.textColor = UIColor.white
        label.numberOfLines = 0
        label.lineBreakMode = NSLineBreakMode.byWordWrapping
    }
    
    /*Set Label Text*/
    func setLabel(text:String){
        label.text = text
    }
    
    /*Set Background Color*/
    func setBackgroundColor(color:UIColor){
    
        self.backgroundColor = color
    }
    
//    /*Ser Border Color*/
//    func setBorderColor(color:UIColor){
//    
//        self.setBorderColor(color: color)
//    }
//    
//    /*Set Border Width*/
//    func setBorderWidth(color:UIColor){
//    
//        self.setBorderColor(color: color)
//    }
    
    /*Set Popup Transition*/
    func setTransitionToController(target:UIViewController){
    
        self.transform = CGAffineTransform.init(scaleX:  0.001, y: 0.001)
        target.view.addSubview(self)
        
        UIView.animate(withDuration: 0.3/1.5, animations: {
            self.transform = CGAffineTransform.init(scaleX:  1.1, y: 1.1)
        }, completion:{ (true) in
            UIView.animate(withDuration: 0.3/2, animations: {
                self.transform = CGAffineTransform.init(scaleX: 0.9, y: 0.9)
            }, completion:{ (true) in
                UIView.animate(withDuration: 0.3/2, animations: {
                    self.transform = .identity
                })
            })
        })
    }
}
